name: Daily GPT-5 Stock Alert to Discord

on:
  schedule:
    - cron: "0 4 * * *"   # 04:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  send-alert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      # ... your existing steps (cache, setup-python, install deps, build/clean universe, aliases) ...

      - name: Run notifier
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

          # --- Logging ---
          PYTHONUNBUFFERED: "1"
          FEATURES_LOG_LEVEL: "DEBUG"
          FEATURES_VERBOSE: "1"
          FEATURES_LOG_EVERY: "300"
          RANKER_LOG_LEVEL: "DEBUG"
          RANKER_VERBOSE: "1"
          RANKER_LOG_EVERY: "300"
          QUICK_LOG_LEVEL: "INFO"

          # --- yfinance tuning ---
          YF_CHUNK_SIZE: "60"
          YF_MAX_RETRIES: "4"
          YF_RETRY_SLEEP: "3.0"

          # --- Stage-1 quick pass ---
          STAGE1_MODE: "loose"
          STAGE1_KEEP: "200"
          STAGE1_RESCUE_FRAC: "0.15"

          # --- Ranker hard drops ---
          HARD_DROP_MODE: "loose"
          HARD_GRACE_ATR: "2.0"

          # --- OpenAI call timeout (seconds) ---
          OPENAI_TIMEOUT: "240"

          # --- Force GPT input dump ---
          LOG_GPT_INPUT: "1"
          LOG_GPT_INPUT_STDOUT: "0"
        run: |
          python scripts/notify.py

      # Helpful: show what files exist so we can see the path that was created
      - name: List possible logs (debug)
        if: always()
        shell: bash
        run: |
          echo "PWD: $(pwd)"
          ls -lah || true
          ls -lah data || true
          ls -lah data/logs || true
          ls -1t data/logs/blocks_to_gpt_* 2>/dev/null || true

      - name: Find latest blocks file
        id: pick_file
        shell: bash
        run: |
          set -e
          FILE=$(ls -1t data/logs/blocks_to_gpt_*.txt 2>/dev/null | head -n1 || true)
          if [ -z "$FILE" ]; then
            echo "found=0" >> "$GITHUB_OUTPUT"
            echo "No blocks_to_gpt_*.txt found"
            exit 0
          fi
          echo "found=1" >> "$GITHUB_OUTPUT"
          echo "file=$FILE" >> "$GITHUB_OUTPUT"
          echo "basename=$(basename "$FILE")" >> "$GITHUB_OUTPUT"

      - name: Commit blocks file to repo (overwrite single file)
        if: steps.pick_file.outputs.found == '1'
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p logs
          cp "${{ steps.pick_file.outputs.file }}" "logs/blocks_to_gpt_latest.txt"
          git add "logs/blocks_to_gpt_latest.txt"
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update latest GPT blocks (run #${{ github.run_number }})"
            git push
          fi
